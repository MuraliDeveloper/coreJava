package pushpaFileCheck;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Properties;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

public class GetProps {
	private static final String LOG_FILE_NAME = "logs.log";
	private static final String INI_FILE_LOCATION = "C:\\Project\\test.ini";
	private static final String FOLDER_TO_SERACH = "C:\\Project\\";
	static Logger logger = Logger.getLogger(GetProps.class.getName());

	static Map<String, String> map = new HashMap<String, String>();
	static {
		map.put("PRJ_BSWTOOLSET_NAME1", "PRJ_BSWTOOLSET_VERSION");
		map.put("PRJ_WORKBENCH_NAME", "PRJ_WORKBENCH_VERSION");
		map.put("PRJ_BUILD_NAME", "PRJ_BUILD_VERSION");

		System.setProperty("logfilename", LOG_FILE_NAME);
		PropertyConfigurator.configure("log4j.properties");
	}

	public static void main(String[] args) throws Exception {
		logger.debug("Main method started");
		InputStream input = null;
		try {
			checkFileExist(INI_FILE_LOCATION);
			checkFileExist(FOLDER_TO_SERACH);
			input = new FileInputStream(INI_FILE_LOCATION);
			Properties prop = new Properties();
			prop.load(input);

			for (Entry<String, String> entry : map.entrySet()) {
				String nameFolder = prop.getProperty(entry.getKey());
				String versionFolder = prop.getProperty(entry.getValue());
				if (nameFolder == null || nameFolder.equals("")) {
					logger.error("The entry " + entry.getKey() + " is not found in the ini file.");
					throw new FileNotFoundException(entry.getKey() + " is not available.");
				}
				if (versionFolder == null || versionFolder.equals("")) {
					logger.error("The entry " + entry.getValue() + " is not found in the ini file.");
					throw new FileNotFoundException(entry.getValue() + " is not available.");
				}
				checkFileExist(FOLDER_TO_SERACH + nameFolder);
				checkFileExist(FOLDER_TO_SERACH + nameFolder + "\\" + versionFolder);
			}
			System.out.println("*********All folders are available.*****************");
			logger.error("Sucess.All folders are available.");
		} catch (FileNotFoundException ex) {
			logger.error("FileNotFoundException occured due to " + ex.getMessage());
			System.out.println(ex.getMessage());
		} catch (IOException ex) {
			logger.error("IO exception occured while parsing from ini file.");
			System.out.println("IO exception occured.please check the logs");
		} finally {
			if (input != null)
				input.close();
			logger.debug("Main method closed.");
		}
	}

	private static boolean checkFileExist(String folderToSerach) throws FileNotFoundException {
		File f = new File(folderToSerach);
		boolean exists = f.exists();
		if (!exists) {
			logger.error("The folder " + folderToSerach + " doesnot exists. ");
			throw new FileNotFoundException(folderToSerach + " is not available.");
		}
		return exists;
	}
}
