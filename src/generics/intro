  Generics:
  -----------------

  List<String> names = new ArrayList<String> ();
  names.add("user1");

  List<Integer> nums = new ArrayList<Integer> ();
  nums.add(245);

  List<Float> sals = new ArrayList<Float> ();
  sals.add(1313.131313f)

  
  -> Generics is used for all the collections ..
  -> write code independendent of the datatype
  
  List names = new ArrayList();// add int/float/string/double/long
  names.add("user1");
  names.add(1222);
  names.add(1313.11313f);
  
Raw list issues:  
---------------
compile-time type checking
risk of ClassCastException 

-> write code independendent of the datatype->
 ->Write code once and apply for any data type..


-> generic method
-> generic class
 
Generic Method:
---------------

public static void print1(String data) { // can be called by passing only string
		System.out.println(data);
	}

public static <E>  void print2(E data) {// can be called by passing any datatype, ex: int, string, float..etc..
                                       
		System.out.println(data);
	}


EX: print1("hello")
  
     print2(1)
     print2(1232.131313f)
     print2("Hellooo")
    
    
    
    