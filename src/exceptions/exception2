1. Can a developer create a exception?
Yes

syntax for creating exception:
----------------------------------
throw keyword is used to create exception.

steps:
-------------
1.Create exception obj
2.throw exception

ArithmeticException ex = new ArithmeticException("num2 cannot be 0");
throw ex;

throw exception code has to be written in the if statement...

->If the parent class is Exception , then we term the class as Exception class.



ex: division of two nums:
if the second num is zeo then throw the exception


throws keyword:
---------------------
- throws we need write at the method declaration.
- the method is not responsible for handling the exception


syntax for  throws:
-------------------------------
ex1:
public void m4() throws SQLException{

<some logic here>

}
m4 method will not handle the SQLException
m4 method will not write the try + catch block for SQLException




ex2:
public void show() throws FileException ,IOException{

<some logic here>

}
show method will not handle the FileException ,IOException 
show method will not write the try + catch block for FileException ,IOException 




Requirement:
----------------


main() calls m2()
m2() calls m3()
m3() calls m4()

main() --> m2() ----> m3() ---> m4()



vaidation logic is in m4() 
if validation is failed in m4() ----> only code that should execute is to give message to customer
if validation fails <some code4> , <some code6> should not execute.....

solutions:
in m4() -> create exception obj using throw 
in main() -> write try + catch 


when exception is created the only code to execute is catch() block , and catch block is in main method..
m4() , m3() , m2()  should not handle exception , they have to rethrow the exception to the caller..
m4() + m3() + m2()  =====> write throws keyword at method declaration


code in m4() to throw exception:
----------------------------------
SQLException ex = new SQLException("num2 cannot be 0");
throw ex;



main()
{
  <some code1>
   m2()
   <some code2>
}


m2() throws SQLException
{
  <some code3>
   m3()
   <some code4>
}


m3() throws SQLException
{
  <some code5>
   m4()
   <some code6 save emp deatils>
}


m4() throws SQLException
{
  <some code to validate emp deatils>
  SQLException ex = new SQLException("num2 cannot be 0");
	throw ex;
   
}



summmary:
------------
  1.create exception in m4() using throw keyword
  2.m2, m3, ,m4() will  not handle exception , write throws keyword at method declaration
  3.main() write try catch
  
