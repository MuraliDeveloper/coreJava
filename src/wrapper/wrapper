Wrapper classes:-
-------------------
For every primitive data type we have a Class available from Java.

primitive       class
--------------------------------
int             Integer
float		    Float
long		    Long
double		    Double
character		Character
boolan		    Boolean



Req:
add multiple int in a list

List<Integer> nums = new ArrayList<>();


Use wrappers when we need to use primitives for collections.

1.List of integers
List<int> list = new ArrayList<>(); // wrong
List<Integer> list = new ArrayList<>();

2.If a method is expecting object, then we have to pass integer obj but not int value..
3.


for all collections we need to store primitive values using wrappers.


declaration:
--------------------
int x = 90;

Integer y = new Integer(900);
Integer z= 899;

here y & z are objects, y & z can be null
x is a variable , not an obj.. and x cannot be null



 

public class Student {

	Integer sub2; // default value is null
	int sub1; // default value is 0
}

// null means student is absent
// 0 means he got 0 marks
// > 0 some marks

Student s = new Student();
print(s.sub1); // 0
print(s.sub2); // null




How to create Objs for the wrapper:
---------------------------------------
Integer y1 = new Integer(900);  // Integer z= 899; 
Float y2 = new Float(900.878787); // Float y2 = 900.878787; 
Long y3 = new Long(90013131); //Long y3 = 90013131;
Double y4 = new Double(900.1113131);
Character y5 = new Character('c');
Boolean y6 = new Boolean(true);




How to convert primitive to wrapper:
------------------------------------------
int a = 90;
Integer y1 = new Integer(a);


How to convert wrapper to primitive
-------------------------------------
WrapperTest.java



 

		