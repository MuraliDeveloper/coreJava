Singleton:
----------------
-> design pattern to ensure only one object is created for one class.

use when the action/task has to be perofmed only once.

where?
-----------
1.Read a csv file
2.Read propeties file
3.Get the connection objs from db  ex:SessionFactory
4.Read springs.xml 


steps:
-----------
1.make class as final
2.make the constr as private 
3.dont provide any setter methods
4.provide only getters 
5.instance variables has to be final 
6.provide the public static method to get the Obj 

package: designPatterns

Service.java:
--------------------
public final class Service{
	
	private static Service serviceObj = null;
	
	private Service(){
		
		
	}
	
	
	public static Service getServiceObj(){
		if(serviceObj==null){
			serviceObj = new Service();
		}
		return serviceObj;
	}
	
	
}



